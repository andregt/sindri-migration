#!/usr/bin/env node
/**
 * Created by André Timermann on 16/12/16.
 *
 * Imprime Status atual a migração
 * Use Lista para imprimir uma lista detalhada das revisões
 *
 */
'use strict';


const program = require('commander');
const chalk = require('chalk');

const Logger = require('../lib/util/logger');
let logger = new Logger();

const Migration = require('../lib/migration');

const Table = require('cli-table');

logger.category = 'Migration Status';

program
    .version(require('../package').version)
    .description('Exibe relatório com status atual da migração')
    .option('-p, --path <directory>', 'Diretório de migração. Padrão: ./data')
    .option('-b, --before <length>', 'Revisões exibidas antes da corrente. Padrão: 100')
    .option('-a, --after <length>', 'Revisões exibidas depois da corrente. Padrão: 100')
    .parse(process.argv);


let migration = new Migration();


console.log(chalk.magenta.bold('------------------------- Sindri Migration - Lista de Revisões -------------------------\n'));


migration.validate()
    .then(() => {

        let currentRevision = parseInt(migration.currentRevision);

        migration.getListRevisions(currentRevision - (program.before || 100), currentRevision + (program.after || 100))
            .then(list => {


                let table = new Table({head: [chalk.blue.bold('Atual'), chalk.blue.bold('Revisão'), chalk.blue.bold('Data')]});


                if (currentRevision == 0) {

                    table.push([chalk.bold.green('\u25B6'), 'r0', 'Não Iniciado']);
                }

                for (let item of list) {
                    let [revision, date] = item;


                    let current = (revision == currentRevision ? chalk.bold.green('\u25B6') : '');
                    table.push([current, `r${revision}`, date]);

                }

                console.log(table.toString());

            });


    })